# this file is not designed to be run directly
# instead, use the docker-compose.<os>.<swift> files
# eg docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.2204.57.yaml run test
version: "3.9"
services:

  zookeeper:
    image: ubuntu/zookeeper

  kafka:
    image: ubuntu/kafka
    depends_on:
      - zookeeper
    environment:
      ZOOKEEPER_HOST: zookeeper

  swift-kafka-client:
    depends_on:
      - kafka
    build:
      context: ..
      dockerfile: docker/Dockerfile
    environment:
      KAFKA_HOST: kafka

  runtime-setup:
    image: swift-kafka-client:default
    build:
      context: .
      dockerfile: Dockerfile

  common: &common
    image: swift-kafka-client:default
    depends_on: [runtime-setup]
    volumes:
      - ~/.ssh:/root/.ssh
      - ..:/swift-kafka-client:z
    working_dir: /swift-kafka-client

  soundness:
    <<: *common
    command: /bin/bash -xcl "swift -version && uname -a && ./scripts/soundness.sh"

  build:
    <<: *common
    environment: []
    command: /bin/bash -cl "swift build"

  test:
    <<: *common
    depends_on: [kafka, runtime-setup]
    environment:
      KAFKA_HOST: kafka
    command: >
      /bin/bash -xcl "
        cd Benchmarks && swift package --disable-sandbox benchmark baseline check --check-absolute-path Thresholds/$${SWIFT_VERSION-}/
      "
# TODO: tmp disable tests
#        swift build --build-tests $${SANITIZER_ARG-} && \
#        swift $${SWIFT_TEST_VERB-test} $${WARN_AS_ERROR_ARG-} $${SANITIZER_ARG-} $${IMPORT_CHECK_ARG-} $${STRICT_CONCURRENCY_ARG-} && \
  update-benchmark-baseline:
    <<: *common
    command: /bin/bash -xcl "cd Benchmarks && swift package --disable-sandbox --scratch-path .build/$${SWIFT_VERSION-}/ --allow-writing-to-package-directory benchmark --format metricP90AbsoluteThresholds --path Thresholds/$${SWIFT_VERSION-}/"

  # util

  shell:
    <<: *common
    entrypoint: /bin/bash
